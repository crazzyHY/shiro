<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="cacheManager" class="cn.craz.shiro.cache.CustomCacheManager">
        <!--<property name="cacheManager" ref="springCacheManager"/>-->
    </bean>

    <!-- 凭证匹配器，做登录次数验证，和密码匹配验证 -->
    <bean id="credentialsMatcher" class="cn.craz.shiro.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
    <!-- 基于Form表单的身份验证过滤器，为了控制验证码 -->
    <bean id="authcFilter" class="cn.craz.shiro.filter.RcFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
    </bean>
    <!--自定义realm-->
    <bean id="userRealm" class="cn.craz.shiro.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!--<property name="cachingEnabled" value="false"/>-->
        <!---->
        <property name="authenticationCacheName" value="authentication"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorization"/>
    </bean>
    <!-- 验证码验证过滤器 -->
    <bean id="rcCaptchaValidateFilter" class="cn.craz.shiro.filter.RcCaptchaValidateFilter">
        <property name="captchaEnabled" value="true"/>
        <property name="captchaParam" value="captchaCode"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"
          p:realm-ref="userRealm" p:cacheManager-ref="cacheManager"
          p:sessionManager-ref="sessionManager"/>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"
          p:globalSessionTimeout="1800000" p:deleteInvalidSessions="false"
          p:sessionValidationSchedulerEnabled="false" p:sessionValidationInterval="1800000"
          p:sessionFactory-ref="sessionFactory" p:sessionDAO-ref="cachingShiroSessionDao">
        <property name="sessionIdCookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie" c:name="SHRIOSESSIONID"/>
        </property>
        <!--<property name="sessionListeners">-->
        <!--<list>-->
        <!--<ref bean="sessionListener"/>-->
        <!--</list>-->
        <!--</property>-->
    </bean>

    <bean id="cachingShiroSessionDao" class="cn.craz.shiro.session.CustomShiroSessionDao"
          p:shiroSessionDao-ref="ShiroSessionDaoImpl"/>

    <bean id="ShiroSessionDaoImpl" class="cn.craz.shiro.session.impl.ShiroSessionDaoImpl"
          p:redisTemplate-ref="redisTemplate"/>
    <bean id="sessionFactory" class="cn.craz.shiro.session.ShiroSessionFactory"/>

    <!--管理shirobean的生命周期-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
    <!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/loginSuccess"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="authcFilter"/>
                <entry key="logout" value-ref="systemLogoutFilter"/>
                <entry key="rcCaptchaValidate" value-ref="rcCaptchaValidateFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /rcCaptcha* = anon
                /login = rcCaptchaValidate,authc
                /logout = logout
                /** = authc
            </value>
        </property>
    </bean>
    <import resource="spring-config-redis.xml"/>
</beans>